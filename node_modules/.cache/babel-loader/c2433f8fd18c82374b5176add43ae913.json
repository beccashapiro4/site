{"ast":null,"code":"import _regeneratorRuntime from \"/Users/beccashapiro/Documents/github/John-Grady-Cole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/beccashapiro/Documents/github/John-Grady-Cole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/beccashapiro/Documents/github/John-Grady-Cole/src/components/ContactForm/index.jsx\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify'; //import 'react-toastify/dist/ReactToastify.min.css';\n\nvar ContactForm = function ContactForm() {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      reset = _useForm.reset,\n      errors = _useForm.formState.errors; // Function that displays a success toast on bottom right of the page when form submission is successful\n\n\n  var toastifySuccess = function toastifySuccess() {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  }; // Function called on submit that uses emailjs to send email of valid contact form\n\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(data);\n              /*\n              // Destrcture data object\n              const { name, email, subject, message } = data;\n              try {\n                const templateParams = {\n                  name,\n                  email,\n                  subject,\n                  message\n                };\n                 await emailjs.send(\n                  process.env.REACT_APP_SERVICE_ID,\n                  process.env.REACT_APP_TEMPLATE_ID,\n                  templateParams,\n                  process.env.REACT_APP_USER_ID\n                );\n                 reset();\n                toastifySuccess();\n              } catch (e) {\n                console.log(e);\n              }\n              */\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    className: \"ContactForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contactForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"contact-form\",\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row formRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    name: \"name\"\n  }, register('name', {\n    required: {\n      value: true,\n      message: 'Please enter your name'\n    },\n    maxLength: {\n      value: 30,\n      message: 'Please use 30 characters or less'\n    }\n  }), {\n    className: \"form-control formInput\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), errors.name && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, errors.name.message)), React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    type: \"email\",\n    name: \"email\"\n  }, register('email', {\n    required: true,\n    pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n  }), {\n    className: \"form-control formInput\",\n    placeholder: \"Email address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), errors.email && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Please enter a valid email address\"))), React.createElement(\"div\", {\n    className: \"row formRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    name: \"subject\"\n  }, register('subject', {\n    required: {\n      value: true,\n      message: 'Please enter a subject'\n    },\n    maxLength: {\n      value: 75,\n      message: 'Subject cannot exceed 75 characters'\n    }\n  }), {\n    className: \"form-control formInput\",\n    placeholder: \"Subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), errors.subject && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, errors.subject.message))), React.createElement(\"div\", {\n    className: \"row formRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"textarea\", Object.assign({\n    rows: 3,\n    name: \"message\"\n  }, register('message', {\n    required: true\n  }), {\n    className: \"form-control formInput\",\n    placeholder: \"Message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), errors.message && React.createElement(\"span\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Please enter a message\"))), React.createElement(\"button\", {\n    className: \"submit-btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })))));\n};\n\nexport default ContactForm;","map":{"version":3,"names":["React","useForm","emailjs","ToastContainer","toast","ContactForm","register","handleSubmit","reset","errors","formState","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","console","log","required","value","message","maxLength","name","pattern","email","subject"],"sources":["/Users/beccashapiro/Documents/github/John-Grady-Cole/src/components/ContactForm/index.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\n//import 'react-toastify/dist/ReactToastify.min.css';\n\nconst ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm();\n\n\n  // Function that displays a success toast on bottom right of the page when form submission is successful\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n\n  // Function called on submit that uses emailjs to send email of valid contact form\n  const onSubmit = async (data) => {\n    console.log(data)\n    /*\n    // Destrcture data object\n    const { name, email, subject, message } = data;\n    try {\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message\n      };\n\n      await emailjs.send(\n        process.env.REACT_APP_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        templateParams,\n        process.env.REACT_APP_USER_ID\n      );\n\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n    */\n  };\n\n  return (\n    <div className='ContactForm'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-12 text-center'>\n            <div className='contactForm'>\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\n                {/* Row 1 of form */}\n                <div className='row formRow'>\n                  <div className='col-6'>\n                    <input\n                      type='text'\n                      name='name'\n                      {...register('name', {\n                        required: { value: true, message: 'Please enter your name' },\n                        maxLength: {\n                          value: 30,\n                          message: 'Please use 30 characters or less'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Name'\n                    ></input>\n                    {errors.name && <span className='errorMessage'>{errors.name.message}</span>}\n                  </div>\n                  <div className='col-6'>\n                    <input\n                      type='email'\n                      name='email'\n                      {...register('email', {\n                        required: true,\n                        pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                      })}\n                      className='form-control formInput'\n                      placeholder='Email address'\n                    ></input>\n                    {errors.email && (\n                      <span className='errorMessage'>Please enter a valid email address</span>\n                    )}\n                  </div>\n                </div>\n                {/* Row 2 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <input\n                      type='text'\n                      name='subject'\n                      {...register('subject', {\n                        required: { value: true, message: 'Please enter a subject' },\n                        maxLength: {\n                          value: 75,\n                          message: 'Subject cannot exceed 75 characters'\n                        }\n                      })}\n                      className='form-control formInput'\n                      placeholder='Subject'\n                    ></input>\n                    {errors.subject && (\n                      <span className='errorMessage'>{errors.subject.message}</span>\n                    )}\n                  </div>\n                </div>\n                {/* Row 3 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <textarea\n                      rows={3}\n                      name='message'\n                      {...register('message', {\n                        required: true\n                      })}\n                      className='form-control formInput'\n                      placeholder='Message'\n                    ></textarea>\n                    {errors.message && <span className='errorMessage'>Please enter a message</span>}\n                  </div>\n                </div>\n                <button className='submit-btn' type='submit'>\n                  Submit\n                </button>\n              </form>\n            </div>\n            <ToastContainer />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}