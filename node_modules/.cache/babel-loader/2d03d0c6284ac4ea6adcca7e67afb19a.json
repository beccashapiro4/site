{"ast":null,"code":"import _slicedToArray from \"/Users/beccashapiro/Documents/github/John-Grady-Cole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/beccashapiro/Documents/github/John-Grady-Cole/src/components/ContactForm/index.jsx\";\nimport React, { useState } from 'react';\nimport env from 'react-dotenv';\nimport emailjs from 'emailjs-com';\n\nvar ContactForm = function ContactForm() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      emailSent = _useState8[0],\n      setEmailSent = _useState8[1];\n\n  var submit = function submit() {\n    console.log('HIIIIII');\n    var serviceId = env.REACT_APP_EMAILJS_SERVICE_ID;\n    var templateId = env.REACT_APP_EMAILJS_TEMPLATE_ID;\n    var userId = env.REACT_APP_EMAILJS_PUBLIC_KEY;\n    console.log(serviceId);\n\n    if (name && email && message) {\n      var templateParams = {\n        name: name,\n        email: email,\n        message: message\n      };\n      emailjs.send(serviceId, templateId, templateParams, userId).then(function (response) {\n        return console.log(response);\n      }).then(function (error) {\n        return console.log(error);\n      });\n      setName('');\n      setEmail('');\n      setMessage('');\n      setEmailSent(true);\n    } else {\n      alert('Please fill in all fields.');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    id: \"contact-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Your Name\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Your email address\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    placeholder: \"Your message\",\n    value: message,\n    onChange: function onChange(e) {\n      return setMessage(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Send\"), React.createElement(\"span\", {\n    className: emailSent ? 'visible' : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Thank you for your message, we will be in touch in no time!\"));\n};\n\nexport default ContactForm;","map":{"version":3,"names":["React","useState","env","emailjs","ContactForm","name","setName","email","setEmail","message","setMessage","emailSent","setEmailSent","submit","console","log","serviceId","REACT_APP_EMAILJS_SERVICE_ID","templateId","REACT_APP_EMAILJS_TEMPLATE_ID","userId","REACT_APP_EMAILJS_PUBLIC_KEY","templateParams","send","then","response","error","alert","e","target","value"],"sources":["/Users/beccashapiro/Documents/github/John-Grady-Cole/src/components/ContactForm/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport env from 'react-dotenv';\nimport emailjs from 'emailjs-com';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n\n  const submit = () => {\n    console.log('HIIIIII');\n    const serviceId = env.REACT_APP_EMAILJS_SERVICE_ID;\n    const templateId = env.REACT_APP_EMAILJS_TEMPLATE_ID;\n    const userId = env.REACT_APP_EMAILJS_PUBLIC_KEY;\n    console.log(serviceId);\n    if (name && email && message) {\n      const templateParams = {\n        name,\n        email,\n        message\n      };\n      emailjs.send(serviceId, templateId, templateParams, userId)\n        .then(response => console.log(response))\n        .then(error => console.log(error));\n\n      setName('');\n      setEmail('');\n      setMessage('');\n      setEmailSent(true);\n    } else {\n      alert('Please fill in all fields.');\n    }\n  }\n\n  return (\n    <div id=\"contact-form\">\n      <input type=\"text\" placeholder=\"Your Name\" value={name} onChange={e => setName(e.target.value)} />\n      <input type=\"email\" placeholder=\"Your email address\" value={email} onChange={e => setEmail(e.target.value)} />\n      <textarea placeholder=\"Your message\" value={message} onChange={e => setMessage(e.target.value)}></textarea>\n      <button onClick={submit}>Send</button>\n\n      <span className={emailSent ? 'visible' : null}>Thank you for your message, we will be in touch in no time!</span>\n    </div>\n  );\n};\n\nexport default ContactForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}