{"ast":null,"code":"import _regeneratorRuntime from \"/Users/beccashapiro/Documents/github/John-Grady-Cole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/beccashapiro/Documents/github/John-Grady-Cole/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/beccashapiro/Documents/github/John-Grady-Cole/src/components/ContactForm/index.jsx\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nvar schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  subject: yup.string().required,\n  message: yup.string().required()\n}).required();\n\nvar ContactForm = function ContactForm() {\n  var handleSubmit = function handleSubmit(e) {\n    e();\n  }; // Function that displays a success toast on bottom right of the page when form submission is successful\n\n\n  var toastifySuccess = function toastifySuccess() {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  }; // Function called on submit that uses emailjs to send email of valid contact form\n\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(data);\n              /*\n              // Destrcture data object\n              const { name, email, subject, message } = data;\n              try {\n                const templateParams = {\n                  name,\n                  email,\n                  subject,\n                  message\n                };\n                 await emailjs.send(\n                  process.env.REACT_APP_SERVICE_ID,\n                  process.env.REACT_APP_TEMPLATE_ID,\n                  templateParams,\n                  process.env.REACT_APP_USER_ID\n                );\n                 reset();\n                toastifySuccess();\n              } catch (e) {\n                console.log(e);\n              }\n              */\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    className: \"ContactForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contactForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"contact-form\",\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row formRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({\n    type: \"text\",\n    name: \"name\"\n  }, console.log('hi'), {\n    /*\n      {...register('name', {\n        required: { value: true, message: 'Please enter your name' },\n        maxLength: {\n          value: 30,\n          message: 'Please use 30 characters or less'\n        }\n      })}\n    */\n    className: \"form-control formInput\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), console.log('woah')\n  /*errors.name && <span className='errorMessage'>{errors.name.message}</span>*/\n  ), React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\"\n    /*\n      {...register('email', {\n        required: true,\n        pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n      })}\n    */\n    ,\n    className: \"form-control formInput\",\n    placeholder: \"Email address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row formRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"subject\"\n    /*\n      {...register('subject', {\n        required: { value: true, message: 'Please enter a subject' },\n        maxLength: {\n          value: 75,\n          message: 'Subject cannot exceed 75 characters'\n        }\n      })}\n    */\n    ,\n    className: \"form-control formInput\",\n    placeholder: \"Subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), console.log('hiii')\n  /*errors.subject && (\n  <span className='errorMessage'>{errors.subject.message}</span>\n  )*/\n  )), React.createElement(\"div\", {\n    className: \"row formRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    rows: 3,\n    name: \"message\"\n    /*\n      {...register('message', {\n        required: true\n      })}\n    */\n    ,\n    className: \"form-control formInput\",\n    placeholder: \"Message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), console.log('yooo')\n  /*errors.message && <span className='errorMessage'>Please enter a message</span>*/\n  )), React.createElement(\"button\", {\n    className: \"submit-btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })))));\n};\n\nexport default ContactForm;","map":{"version":3,"names":["React","useForm","emailjs","ToastContainer","toast","yupResolver","yup","schema","object","shape","name","string","required","email","subject","message","ContactForm","handleSubmit","e","toastifySuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","className","toastId","onSubmit","data","console","log"],"sources":["/Users/beccashapiro/Documents/github/John-Grady-Cole/src/components/ContactForm/index.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport emailjs from 'emailjs-com';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nconst schema = yup\n  .object()\n  .shape({\n    name: yup.string().required(),\n    email: yup.string().required(),\n    subject: yup.string().required,\n    message: yup.string().required(),\n  })\n  .required();\n\n\nconst ContactForm = () => {\n\n  const handleSubmit = (e) => { e() };\n\n  // Function that displays a success toast on bottom right of the page when form submission is successful\n  const toastifySuccess = () => {\n    toast('Form sent!', {\n      position: 'bottom-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: 'submit-feedback success',\n      toastId: 'notifyToast'\n    });\n  };\n\n  // Function called on submit that uses emailjs to send email of valid contact form\n  const onSubmit = async (data) => {\n    console.log(data)\n    /*\n    // Destrcture data object\n    const { name, email, subject, message } = data;\n    try {\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message\n      };\n\n      await emailjs.send(\n        process.env.REACT_APP_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        templateParams,\n        process.env.REACT_APP_USER_ID\n      );\n\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n    */\n  };\n\n  return (\n    <div className='ContactForm'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-12 text-center'>\n            <div className='contactForm'>\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\n                {/* Row 1 of form */}\n                <div className='row formRow'>\n                  <div className='col-6'>\n                    <input\n                      type='text'\n                      name='name'\n                      {\n                      ...console.log('hi')\n                      }\n                      /*\n                        {...register('name', {\n                          required: { value: true, message: 'Please enter your name' },\n                          maxLength: {\n                            value: 30,\n                            message: 'Please use 30 characters or less'\n                          }\n                        })}\n                      */\n                      className='form-control formInput'\n                      placeholder='Name'\n                    ></input>\n                    {console.log('woah')/*errors.name && <span className='errorMessage'>{errors.name.message}</span>*/}\n                  </div>\n                  <div className='col-6'>\n                    <input\n                      type='email'\n                      name='email'\n                      /*\n                        {...register('email', {\n                          required: true,\n                          pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n                        })}\n                      */\n                      className='form-control formInput'\n                      placeholder='Email address'\n                    ></input>\n                    {/*errors.email && (\n                      <span className='errorMessage'>Please enter a valid email address</span>\n                    )*/}\n                  </div>\n                </div>\n                {/* Row 2 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <input\n                      type='text'\n                      name='subject'\n                      /*\n                        {...register('subject', {\n                          required: { value: true, message: 'Please enter a subject' },\n                          maxLength: {\n                            value: 75,\n                            message: 'Subject cannot exceed 75 characters'\n                          }\n                        })}\n                      */\n                      className='form-control formInput'\n                      placeholder='Subject'\n                    ></input>\n                    {console.log('hiii')/*errors.subject && (\n                      <span className='errorMessage'>{errors.subject.message}</span>\n                    )*/}\n                  </div>\n                </div>\n                {/* Row 3 of form */}\n                <div className='row formRow'>\n                  <div className='col'>\n                    <textarea\n                      rows={3}\n                      name='message'\n                      /*\n                        {...register('message', {\n                          required: true\n                        })}\n                      */\n                      className='form-control formInput'\n                      placeholder='Message'\n                    ></textarea>\n                    {console.log('yooo') /*errors.message && <span className='errorMessage'>Please enter a message</span>*/}\n                  </div>\n                </div>\n                <button className='submit-btn' type='submit'>\n                  Submit\n                </button>\n              </form>\n            </div>\n            <ToastContainer />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}